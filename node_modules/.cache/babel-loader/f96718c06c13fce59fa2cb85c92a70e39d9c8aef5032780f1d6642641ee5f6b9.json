{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meghn\\\\Downloads\\\\pppp\\\\pppp\\\\frontend\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Paper, Typography, TextField, Button, Box, Alert } from '@mui/material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    resetToken\n  } = useParams();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    setError('');\n\n    // Validate password\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters long');\n      setLoading(false);\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:5000/api/auth/reset-password/${resetToken}`, {\n        password\n      });\n      setMessage(response.data.message);\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Something went wrong');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          color: \"textSecondary\",\n          sx: {\n            mb: 3\n          },\n          children: \"Enter your new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mb: 2\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"New Password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            sx: {\n              mb: 2\n            },\n            helperText: \"Must be at least 8 characters long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Confirm Password\",\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true,\n            sx: {\n              mb: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            disabled: loading,\n            children: loading ? 'Resetting...' : 'Reset Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"AGTDHZwhsRKoWQZwciMFQjHfr2M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Container","Paper","Typography","TextField","Button","Box","Alert","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","loading","setLoading","resetToken","navigate","handleSubmit","e","preventDefault","length","response","put","data","setTimeout","err","_err$response","_err$response$data","maxWidth","children","sx","mt","p","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","mb","severity","onSubmit","fullWidth","label","type","value","onChange","target","required","helperText","disabled","_c","$RefreshReg$"],"sources":["C:/Users/meghn/Downloads/pppp/pppp/frontend/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  Alert,\n} from '@mui/material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ResetPassword = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { resetToken } = useParams();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    setError('');\n\n    // Validate password\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters long');\n      setLoading(false);\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await axios.put(\n        `http://localhost:5000/api/auth/reset-password/${resetToken}`,\n        { password }\n      );\n      setMessage(response.data.message);\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Something went wrong');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 8 }}>\n        <Paper sx={{ p: 4 }}>\n          <Typography variant=\"h4\" align=\"center\" gutterBottom>\n            Reset Password\n          </Typography>\n          <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" sx={{ mb: 3 }}>\n            Enter your new password\n          </Typography>\n\n          {message && (\n            <Alert severity=\"success\" sx={{ mb: 2 }}>\n              {message}\n            </Alert>\n          )}\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n\n          <form onSubmit={handleSubmit}>\n            <TextField\n              fullWidth\n              label=\"New Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              sx={{ mb: 2 }}\n              helperText=\"Must be at least 8 characters long\"\n            />\n            <TextField\n              fullWidth\n              label=\"Confirm Password\"\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n              sx={{ mb: 3 }}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n            >\n              {loading ? 'Resetting...' : 'Reset Password'}\n            </Button>\n          </form>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,SAAS,EACTC,KAAK,EACLC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,GAAG,EACHC,KAAK,QACA,eAAe;AACtB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEyB;EAAW,CAAC,GAAGjB,SAAS,CAAC,CAAC;EAClC,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,UAAU,CAAC,IAAI,CAAC;IAChBJ,UAAU,CAAC,EAAE,CAAC;IACdE,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,IAAIP,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;MACvBR,QAAQ,CAAC,6CAA6C,CAAC;MACvDE,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAIT,QAAQ,KAAKE,eAAe,EAAE;MAChCK,QAAQ,CAAC,wBAAwB,CAAC;MAClCE,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAC9B,iDAAiDP,UAAU,EAAE,EAC7D;QAAEV;MAAS,CACb,CAAC;MACDK,UAAU,CAACW,QAAQ,CAACE,IAAI,CAACd,OAAO,CAAC;MACjCe,UAAU,CAAC,MAAM;QACfR,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOS,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZf,QAAQ,CAAC,EAAAc,aAAA,GAAAD,GAAG,CAACJ,QAAQ,cAAAK,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBlB,OAAO,KAAI,sBAAsB,CAAC;IACjE;IACAK,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA,CAACX,SAAS;IAACqC,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtB3B,OAAA,CAACN,GAAG;MAACkC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAF,QAAA,eACjB3B,OAAA,CAACV,KAAK;QAACsC,EAAE,EAAE;UAAEE,CAAC,EAAE;QAAE,CAAE;QAAAH,QAAA,gBAClB3B,OAAA,CAACT,UAAU;UAACwC,OAAO,EAAC,IAAI;UAACC,KAAK,EAAC,QAAQ;UAACC,YAAY;UAAAN,QAAA,EAAC;QAErD;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbrC,OAAA,CAACT,UAAU;UAACwC,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC,QAAQ;UAACM,KAAK,EAAC,eAAe;UAACV,EAAE,EAAE;YAAEW,EAAE,EAAE;UAAE,CAAE;UAAAZ,QAAA,EAAC;QAEhF;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EAEZ9B,OAAO,iBACNP,OAAA,CAACL,KAAK;UAAC6C,QAAQ,EAAC,SAAS;UAACZ,EAAE,EAAE;YAAEW,EAAE,EAAE;UAAE,CAAE;UAAAZ,QAAA,EACrCpB;QAAO;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACR,EACA5B,KAAK,iBACJT,OAAA,CAACL,KAAK;UAAC6C,QAAQ,EAAC,OAAO;UAACZ,EAAE,EAAE;YAAEW,EAAE,EAAE;UAAE,CAAE;UAAAZ,QAAA,EACnClB;QAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR,eAEDrC,OAAA;UAAMyC,QAAQ,EAAE1B,YAAa;UAAAY,QAAA,gBAC3B3B,OAAA,CAACR,SAAS;YACRkD,SAAS;YACTC,KAAK,EAAC,cAAc;YACpBC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAE1C,QAAS;YAChB2C,QAAQ,EAAG9B,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;YACRpB,EAAE,EAAE;cAAEW,EAAE,EAAE;YAAE,CAAE;YACdU,UAAU,EAAC;UAAoC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACFrC,OAAA,CAACR,SAAS;YACRkD,SAAS;YACTC,KAAK,EAAC,kBAAkB;YACxBC,IAAI,EAAC,UAAU;YACfC,KAAK,EAAExC,eAAgB;YACvByC,QAAQ,EAAG9B,CAAC,IAAKV,kBAAkB,CAACU,CAAC,CAAC+B,MAAM,CAACF,KAAK,CAAE;YACpDG,QAAQ;YACRpB,EAAE,EAAE;cAAEW,EAAE,EAAE;YAAE;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC,eACFrC,OAAA,CAACP,MAAM;YACLmD,IAAI,EAAC,QAAQ;YACbF,SAAS;YACTX,OAAO,EAAC,WAAW;YACnBO,KAAK,EAAC,SAAS;YACfY,QAAQ,EAAEvC,OAAQ;YAAAgB,QAAA,EAEjBhB,OAAO,GAAG,cAAc,GAAG;UAAgB;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACnC,EAAA,CAnGID,aAAa;EAAA,QAMML,SAAS,EACfC,WAAW;AAAA;AAAAsD,EAAA,GAPxBlD,aAAa;AAqGnB,eAAeA,aAAa;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}