{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meghn\\\\Downloads\\\\pppp\\\\pppp\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Grid, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\nconst AdminDashboard = () => {\n  _s();\n  var _selectedRequest$user, _selectedRequest$user2, _selectedRequest$user3, _selectedRequest$user4;\n  const [requests, setRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedRequest, setSelectedRequest] = useState(null);\n  const [response, setResponse] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [detailsDialogOpen, setDetailsDialogOpen] = useState(false);\n  const [nameFilter, setNameFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('all');\n  const [timeFilter, setTimeFilter] = useState('all');\n  const [chartData, setChartData] = useState([]);\n  const [stats, setStats] = useState({\n    total: 0,\n    approved: 0,\n    rejected: 0,\n    pending: 0\n  });\n  useEffect(() => {\n    fetchRequests();\n    const interval = setInterval(fetchRequests, 5000); // Poll every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    // Process data for charts when requests change\n    const processChartData = () => {\n      let filteredRequests = [...requests];\n\n      // Apply time filter\n      if (timeFilter !== 'all') {\n        const filterDate = new Date();\n        switch (timeFilter) {\n          case 'day':\n            filterDate.setDate(filterDate.getDate() - 1);\n            break;\n          case 'week':\n            filterDate.setDate(filterDate.getDate() - 7);\n            break;\n          case 'month':\n            filterDate.setMonth(filterDate.getMonth() - 1);\n            break;\n          default:\n            break;\n        }\n        filteredRequests = requests.filter(request => new Date(request.createdAt) > filterDate);\n      }\n\n      // Calculate statistics\n      const newStats = {\n        total: filteredRequests.length,\n        approved: filteredRequests.filter(r => r.status === 'approved').length,\n        rejected: filteredRequests.filter(r => r.status === 'rejected').length,\n        pending: filteredRequests.filter(r => r.status === 'pending').length\n      };\n      setStats(newStats);\n\n      // Group requests by date\n      const requestsByDate = {};\n      filteredRequests.forEach(request => {\n        const date = new Date(request.createdAt).toLocaleDateString();\n        requestsByDate[date] = requestsByDate[date] || {\n          date,\n          total: 0,\n          approved: 0,\n          rejected: 0,\n          pending: 0\n        };\n        requestsByDate[date].total++;\n        requestsByDate[date][request.status]++;\n      });\n\n      // Convert to chart format\n      const chartData = Object.values(requestsByDate).sort((a, b) => new Date(a.date) - new Date(b.date));\n      setChartData(chartData);\n      setRequestTypes(Array.from(new Set(filteredRequests.map(r => r.subject))));\n    };\n    processChartData();\n  }, [requests, timeFilter]);\n  const fetchRequests = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/requests/all');\n      setRequests(res.data.data);\n    } catch (error) {\n      console.error('Error fetching requests:', error);\n    }\n    setLoading(false);\n  };\n  const handleRequestAction = async (request, status) => {\n    setSelectedRequest(request);\n    if (status === 'pending') {\n      setDialogOpen(true);\n    } else {\n      setResponse('');\n      await handleSubmitResponse(request, status);\n      // Immediately update the request status in the UI\n      setRequests(prevRequests => prevRequests.map(r => r._id === request._id ? {\n        ...r,\n        status,\n        adminResponse: response\n      } : r));\n    }\n  };\n  const handleSubmitResponse = async (request, status) => {\n    try {\n      await axios.put(`http://localhost:5000/api/requests/${request._id}`, {\n        status,\n        adminResponse: response\n      });\n      setDialogOpen(false);\n      setResponse('');\n      fetchRequests();\n    } catch (error) {\n      console.error('Error updating request:', error);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'approved':\n        return 'success';\n      case 'rejected':\n        return 'error';\n      default:\n        return 'warning';\n    }\n  };\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n    setResponse('');\n    setSelectedRequest(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Filter requests based on name and type\n  const filteredRequests = requests.filter(request => {\n    var _request$user, _request$user$name;\n    const nameMatch = (_request$user = request.user) === null || _request$user === void 0 ? void 0 : (_request$user$name = _request$user.name) === null || _request$user$name === void 0 ? void 0 : _request$user$name.toLowerCase().includes(nameFilter.toLowerCase());\n    const typeMatch = typeFilter === 'all' || request.subject === typeFilter;\n    return nameMatch && typeMatch;\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Admin Dashboard - Manage Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              textAlign: 'center',\n              bgcolor: 'primary.light',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Total Requests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: stats.total\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              textAlign: 'center',\n              bgcolor: 'success.light',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: stats.approved\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              textAlign: 'center',\n              bgcolor: 'error.light',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Rejected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: stats.rejected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              textAlign: 'center',\n              bgcolor: 'warning.light',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: stats.pending\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Filter by Name\",\n            value: nameFilter,\n            onChange: e => setNameFilter(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Filter by Request Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: typeFilter,\n              label: \"Filter by Request Type\",\n              onChange: e => setTypeFilter(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"all\",\n                children: \"All Types\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), Array.from(new Set(requests.map(r => r.subject))).map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            minWidth: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Time Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: timeFilter,\n            onChange: e => setTimeFilter(e.target.value),\n            label: \"Time Filter\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"day\",\n              children: \"Last 24 Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"week\",\n              children: \"Last 7 Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"month\",\n              children: \"Last 30 Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Request Statistics Over Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: 300\n              },\n              children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 300,\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"approved\",\n                    fill: \"#4caf50\",\n                    name: \"Approved\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"rejected\",\n                    fill: \"#f44336\",\n                    name: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"pending\",\n                    fill: \"#ff9800\",\n                    name: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date & Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [filteredRequests.map(request => {\n              var _request$user2, _request$user3, _request$user4;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: () => {\n                  setSelectedRequest(request);\n                  setDetailsDialogOpen(true);\n                },\n                sx: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: (_request$user2 = request.user) === null || _request$user2 === void 0 ? void 0 : _request$user2.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: ((_request$user3 = request.user) === null || _request$user3 === void 0 ? void 0 : _request$user3.role) || 'N/A',\n                    color: ((_request$user4 = request.user) === null || _request$user4 === void 0 ? void 0 : _request$user4.role) === 'faculty' ? 'primary' : 'secondary',\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: request.subject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: request.status,\n                    color: getStatusColor(request.status),\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: new Date(request.createdAt).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: request.status === 'pending' && /*#__PURE__*/_jsxDEV(Box, {\n                    onClick: e => e.stopPropagation(),\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      color: \"success\",\n                      size: \"small\",\n                      onClick: () => handleRequestAction(request, 'approved'),\n                      sx: {\n                        mr: 1\n                      },\n                      children: \"Approve\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"error\",\n                      size: \"small\",\n                      onClick: () => handleRequestAction(request, 'rejected'),\n                      children: \"Reject\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 19\n                }, this)]\n              }, request._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this);\n            }), requests.length === 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6,\n                align: \"center\",\n                children: \"No requests found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Response to Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Admin Response (This will be sent via email)\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: response,\n          onChange: e => setResponse(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleSubmitResponse(selectedRequest, selectedRequest.status),\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Send Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: detailsDialogOpen,\n      onClose: () => setDetailsDialogOpen(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Request Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: selectedRequest && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"textSecondary\",\n              children: \"User Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: (_selectedRequest$user = selectedRequest.user) === null || _selectedRequest$user === void 0 ? void 0 : _selectedRequest$user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: (_selectedRequest$user2 = selectedRequest.user) === null || _selectedRequest$user2 === void 0 ? void 0 : _selectedRequest$user2.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: ((_selectedRequest$user3 = selectedRequest.user) === null || _selectedRequest$user3 === void 0 ? void 0 : _selectedRequest$user3.role) || 'N/A',\n              color: ((_selectedRequest$user4 = selectedRequest.user) === null || _selectedRequest$user4 === void 0 ? void 0 : _selectedRequest$user4.role) === 'faculty' ? 'primary' : 'secondary',\n              size: \"small\",\n              sx: {\n                mt: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"textSecondary\",\n              children: \"Request Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Type: \", selectedRequest.subject]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Status:\", /*#__PURE__*/_jsxDEV(Chip, {\n                label: selectedRequest.status,\n                color: getStatusColor(selectedRequest.status),\n                size: \"small\",\n                sx: {\n                  ml: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Created: \", new Date(selectedRequest.createdAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"textSecondary\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              variant: \"outlined\",\n              sx: {\n                p: 2,\n                mt: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: selectedRequest.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), selectedRequest.attachments && selectedRequest.attachments.length > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"textSecondary\",\n              children: \"Attachments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this), selectedRequest.attachments.map((attachment, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2,\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                gutterBottom: true,\n                children: [\"File: \", attachment.fileName, \" (\", (attachment.fileSize / 1024).toFixed(2), \" KB)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 23\n              }, this), attachment.filePath.toLowerCase().endsWith('.pdf') ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n                src: `http://localhost:5000${attachment.filePath}`,\n                width: \"100%\",\n                height: \"500px\",\n                title: \"PDF Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 25\n              }, this) : attachment.fileType.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000${attachment.filePath}`,\n                alt: attachment.fileName,\n                style: {\n                  maxWidth: '100%',\n                  maxHeight: '500px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                href: `http://localhost:5000${attachment.filePath}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                variant: \"outlined\",\n                startIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n                  role: \"img\",\n                  \"aria-label\": \"file\",\n                  children: \"\\uD83D\\uDCCE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 38\n                }, this),\n                children: [\"Download \", attachment.fileName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"textSecondary\",\n              children: \"Admin Response\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              variant: \"outlined\",\n              sx: {\n                p: 2,\n                mt: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: selectedRequest.adminResponse || 'No admin response yet'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDetailsDialogOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          variant: \"contained\",\n          onClick: () => {\n            setDetailsDialogOpen(false);\n            handleRequestAction(selectedRequest, 'approved');\n          },\n          sx: {\n            ml: 1,\n            backgroundColor: (selectedRequest === null || selectedRequest === void 0 ? void 0 : selectedRequest.status) === 'approved' ? 'success.dark' : 'success.main',\n            '&:hover': {\n              backgroundColor: 'success.dark'\n            }\n          },\n          children: (selectedRequest === null || selectedRequest === void 0 ? void 0 : selectedRequest.status) === 'approved' ? 'Approved' : 'Approve'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"error\",\n          variant: \"contained\",\n          onClick: () => {\n            setDetailsDialogOpen(false);\n            handleRequestAction(selectedRequest, 'rejected');\n          },\n          sx: {\n            ml: 1,\n            backgroundColor: (selectedRequest === null || selectedRequest === void 0 ? void 0 : selectedRequest.status) === 'rejected' ? 'error.dark' : 'error.main',\n            '&:hover': {\n              backgroundColor: 'error.dark'\n            }\n          },\n          children: (selectedRequest === null || selectedRequest === void 0 ? void 0 : selectedRequest.status) === 'rejected' ? 'Rejected' : 'Reject'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"jaga4IoY2rM8l5psIgOuzws+euo=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Paper","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","Box","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Grid","FormControl","InputLabel","Select","MenuItem","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","COLORS","AdminDashboard","_s","_selectedRequest$user","_selectedRequest$user2","_selectedRequest$user3","_selectedRequest$user4","requests","setRequests","loading","setLoading","selectedRequest","setSelectedRequest","response","setResponse","dialogOpen","setDialogOpen","detailsDialogOpen","setDetailsDialogOpen","nameFilter","setNameFilter","typeFilter","setTypeFilter","timeFilter","setTimeFilter","chartData","setChartData","stats","setStats","total","approved","rejected","pending","fetchRequests","interval","setInterval","clearInterval","processChartData","filteredRequests","filterDate","Date","setDate","getDate","setMonth","getMonth","filter","request","createdAt","newStats","length","r","status","requestsByDate","forEach","date","toLocaleDateString","Object","values","sort","a","b","setRequestTypes","Array","from","Set","map","subject","res","get","data","error","console","handleRequestAction","handleSubmitResponse","prevRequests","_id","adminResponse","put","getStatusColor","handleCloseDialog","children","fileName","_jsxFileName","lineNumber","columnNumber","_request$user","_request$user$name","nameMatch","user","name","toLowerCase","includes","typeMatch","maxWidth","sx","mt","mb","variant","gutterBottom","container","spacing","item","xs","sm","md","p","textAlign","bgcolor","color","fullWidth","label","value","onChange","e","target","type","minWidth","height","width","strokeDasharray","dataKey","fill","component","_request$user2","_request$user3","_request$user4","hover","onClick","cursor","role","size","toLocaleString","stopPropagation","mr","colSpan","align","open","onClose","autoFocus","margin","multiline","rows","email","ml","description","attachments","attachment","index","fileSize","toFixed","filePath","endsWith","src","title","fileType","startsWith","alt","style","maxHeight","href","rel","startIcon","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/meghn/Downloads/pppp/pppp/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  Paper,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from '@mui/material';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\n\nconst AdminDashboard = () => {\n  const [requests, setRequests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedRequest, setSelectedRequest] = useState(null);\n  const [response, setResponse] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [detailsDialogOpen, setDetailsDialogOpen] = useState(false);\n  const [nameFilter, setNameFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('all');\n  const [timeFilter, setTimeFilter] = useState('all');\n  const [chartData, setChartData] = useState([]);\n  const [stats, setStats] = useState({\n    total: 0,\n    approved: 0,\n    rejected: 0,\n    pending: 0\n  });\n\n  useEffect(() => {\n    fetchRequests();\n    const interval = setInterval(fetchRequests, 5000); // Poll every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    // Process data for charts when requests change\n    const processChartData = () => {\n  \n      let filteredRequests = [...requests];\n\n      // Apply time filter\n      if (timeFilter !== 'all') {\n        const filterDate = new Date();\n        switch (timeFilter) {\n          case 'day':\n            filterDate.setDate(filterDate.getDate() - 1);\n            break;\n          case 'week':\n            filterDate.setDate(filterDate.getDate() - 7);\n            break;\n          case 'month':\n            filterDate.setMonth(filterDate.getMonth() - 1);\n            break;\n          default:\n            break;\n        }\n        filteredRequests = requests.filter(request => \n          new Date(request.createdAt) > filterDate\n        );\n      }\n\n      // Calculate statistics\n      const newStats = {\n        total: filteredRequests.length,\n        approved: filteredRequests.filter(r => r.status === 'approved').length,\n        rejected: filteredRequests.filter(r => r.status === 'rejected').length,\n        pending: filteredRequests.filter(r => r.status === 'pending').length\n      };\n      setStats(newStats);\n\n      // Group requests by date\n      const requestsByDate = {};\n      filteredRequests.forEach(request => {\n        const date = new Date(request.createdAt).toLocaleDateString();\n        requestsByDate[date] = requestsByDate[date] || {\n          date,\n          total: 0,\n          approved: 0,\n          rejected: 0,\n          pending: 0\n        };\n        requestsByDate[date].total++;\n        requestsByDate[date][request.status]++;\n      });\n\n      // Convert to chart format\n      const chartData = Object.values(requestsByDate)\n        .sort((a, b) => new Date(a.date) - new Date(b.date));\n\n      setChartData(chartData);\n      setRequestTypes(Array.from(new Set(filteredRequests.map(r => r.subject))));\n    };\n\n    processChartData();\n  }, [requests, timeFilter]);\n\n  const fetchRequests = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/requests/all');\n      setRequests(res.data.data);\n    } catch (error) {\n      console.error('Error fetching requests:', error);\n    }\n    setLoading(false);\n  };\n\n  const handleRequestAction = async (request, status) => {\n    setSelectedRequest(request);\n    if (status === 'pending') {\n      setDialogOpen(true);\n    } else {\n      setResponse('');\n      await handleSubmitResponse(request, status);\n      // Immediately update the request status in the UI\n      setRequests(prevRequests =>\n        prevRequests.map(r =>\n          r._id === request._id\n            ? { ...r, status, adminResponse: response }\n            : r\n        )\n      );\n    }\n  };\n\n  const handleSubmitResponse = async (request, status) => {\n    try {\n      await axios.put(`http://localhost:5000/api/requests/${request._id}`, {\n        status,\n        adminResponse: response,\n      });\n      setDialogOpen(false);\n      setResponse('');\n      fetchRequests();\n    } catch (error) {\n      console.error('Error updating request:', error);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'approved':\n        return 'success';\n      case 'rejected':\n        return 'error';\n      default:\n        return 'warning';\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n    setResponse('');\n    setSelectedRequest(null);\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <Typography>Loading...</Typography>\n      </Container>\n    );\n  }\n\n  // Filter requests based on name and type\n  const filteredRequests = requests.filter((request) => {\n    const nameMatch = request.user?.name?.toLowerCase().includes(nameFilter.toLowerCase());\n    const typeMatch = typeFilter === 'all' || request.subject === typeFilter;\n    return nameMatch && typeMatch;\n  });\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Admin Dashboard - Manage Requests\n        </Typography>\n\n        {/* Statistics Cards */}\n        <Grid container spacing={2} sx={{ mb: 4 }}>\n          <Grid item xs={12} sm={6} md={3}>\n            <Paper sx={{ p: 2, textAlign: 'center', bgcolor: 'primary.light', color: 'white' }}>\n              <Typography variant=\"h6\">Total Requests</Typography>\n              <Typography variant=\"h4\">{stats.total}</Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Paper sx={{ p: 2, textAlign: 'center', bgcolor: 'success.light', color: 'white' }}>\n              <Typography variant=\"h6\">Approved</Typography>\n              <Typography variant=\"h4\">{stats.approved}</Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Paper sx={{ p: 2, textAlign: 'center', bgcolor: 'error.light', color: 'white' }}>\n              <Typography variant=\"h6\">Rejected</Typography>\n              <Typography variant=\"h4\">{stats.rejected}</Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Paper sx={{ p: 2, textAlign: 'center', bgcolor: 'warning.light', color: 'white' }}>\n              <Typography variant=\"h6\">Pending</Typography>\n              <Typography variant=\"h4\">{stats.pending}</Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n\n        {/* Filters */}\n        <Grid container spacing={3} sx={{ mb: 4 }}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              fullWidth\n              label=\"Filter by Name\"\n              value={nameFilter}\n              onChange={(e) => setNameFilter(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <FormControl fullWidth>\n              <InputLabel>Filter by Request Type</InputLabel>\n              <Select\n                value={typeFilter}\n                label=\"Filter by Request Type\"\n                onChange={(e) => setTypeFilter(e.target.value)}\n              >\n                <MenuItem value=\"all\">All Types</MenuItem>\n                {Array.from(new Set(requests.map(r => r.subject))).map((type) => (\n                  <MenuItem key={type} value={type}>\n                    {type}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        {/* Time Filter */}\n        <Box sx={{ mb: 3 }}>\n          <FormControl sx={{ minWidth: 200 }}>\n            <InputLabel>Time Filter</InputLabel>\n            <Select\n              value={timeFilter}\n              onChange={(e) => setTimeFilter(e.target.value)}\n              label=\"Time Filter\"\n            >\n              <MenuItem value=\"all\">All Time</MenuItem>\n              <MenuItem value=\"day\">Last 24 Hours</MenuItem>\n              <MenuItem value=\"week\">Last 7 Days</MenuItem>\n              <MenuItem value=\"month\">Last 30 Days</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n\n        {/* Charts */}\n        <Grid container spacing={3} sx={{ mt: 2 }}>\n          <Grid item xs={12}>\n            <Paper sx={{ p: 3 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Request Statistics Over Time\n              </Typography>\n              <Box sx={{ height: 300 }}>\n                <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"approved\" fill=\"#4caf50\" name=\"Approved\" />\n                  <Bar dataKey=\"rejected\" fill=\"#f44336\" name=\"Rejected\" />\n                  <Bar dataKey=\"pending\" fill=\"#ff9800\" name=\"Pending\" />\n                </BarChart>\n              </ResponsiveContainer>\n              </Box>\n            </Paper>\n          </Grid>\n\n        </Grid>\n\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>User</TableCell>\n                <TableCell>Role</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Date & Time</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredRequests.map((request) => (\n                <TableRow \n                  key={request._id}\n                  hover\n                  onClick={() => {\n                    setSelectedRequest(request);\n                    setDetailsDialogOpen(true);\n                  }}\n                  sx={{ cursor: 'pointer' }}\n                >\n                  <TableCell>\n                    {request.user?.name}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={request.user?.role || 'N/A'}\n                      color={request.user?.role === 'faculty' ? 'primary' : 'secondary'}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell>{request.subject}</TableCell>\n                  <TableCell>\n                    <Chip\n                      label={request.status}\n                      color={getStatusColor(request.status)}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    {new Date(request.createdAt).toLocaleString()}\n                  </TableCell>\n                  <TableCell>\n                    {request.status === 'pending' && (\n                      <Box onClick={(e) => e.stopPropagation()}>\n                        <Button\n                          color=\"success\"\n                          size=\"small\"\n                          onClick={() => handleRequestAction(request, 'approved')}\n                          sx={{ mr: 1 }}\n                        >\n                          Approve\n                        </Button>\n                        <Button\n                          color=\"error\"\n                          size=\"small\"\n                          onClick={() => handleRequestAction(request, 'rejected')}\n                        >\n                          Reject\n                        </Button>\n                      </Box>\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n              {requests.length === 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align=\"center\">\n                    No requests found\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n\n      {/* Response Dialog */}\n      <Dialog open={dialogOpen} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Response to Request</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Admin Response (This will be sent via email)\"\n            fullWidth\n            multiline\n            rows={4}\n            value={response}\n            onChange={(e) => setResponse(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button\n            onClick={() =>\n              handleSubmitResponse(selectedRequest, selectedRequest.status)\n            }\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Send Response\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Details Dialog */}\n      <Dialog open={detailsDialogOpen} onClose={() => setDetailsDialogOpen(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Request Details</DialogTitle>\n        <DialogContent>\n          {selectedRequest && (\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">User Information</Typography>\n                <Typography variant=\"body1\">{selectedRequest.user?.name}</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">{selectedRequest.user?.email}</Typography>\n                <Chip\n                  label={selectedRequest.user?.role || 'N/A'}\n                  color={selectedRequest.user?.role === 'faculty' ? 'primary' : 'secondary'}\n                  size=\"small\"\n                  sx={{ mt: 1 }}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">Request Information</Typography>\n                <Typography variant=\"body1\">Type: {selectedRequest.subject}</Typography>\n                <Typography variant=\"body2\">Status: \n                  <Chip\n                    label={selectedRequest.status}\n                    color={getStatusColor(selectedRequest.status)}\n                    size=\"small\"\n                    sx={{ ml: 1 }}\n                  />\n                </Typography>\n                <Typography variant=\"body2\">\n                  Created: {new Date(selectedRequest.createdAt).toLocaleString()}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">Description</Typography>\n                <Paper variant=\"outlined\" sx={{ p: 2, mt: 1 }}>\n                  <Typography variant=\"body1\">{selectedRequest.description}</Typography>\n                </Paper>\n              </Grid>\n              {selectedRequest.attachments && selectedRequest.attachments.length > 0 && (\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">Attachments</Typography>\n                  {selectedRequest.attachments.map((attachment, index) => (\n                    <Box key={index} sx={{ mt: 2, mb: 2 }}>\n                      <Typography variant=\"body2\" gutterBottom>\n                        File: {attachment.fileName} ({(attachment.fileSize / 1024).toFixed(2)} KB)\n                      </Typography>\n                      {attachment.filePath.toLowerCase().endsWith('.pdf') ? (\n                        <iframe\n                          src={`http://localhost:5000${attachment.filePath}`}\n                          width=\"100%\"\n                          height=\"500px\"\n                          title=\"PDF Preview\"\n                        />\n                      ) : attachment.fileType.startsWith('image/') ? (\n                        <img\n                          src={`http://localhost:5000${attachment.filePath}`}\n                          alt={attachment.fileName}\n                          style={{ maxWidth: '100%', maxHeight: '500px' }}\n                        />\n                      ) : (\n                        <Button\n                          href={`http://localhost:5000${attachment.filePath}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          variant=\"outlined\"\n                          startIcon={<span role=\"img\" aria-label=\"file\">📎</span>}\n                        >\n                          Download {attachment.fileName}\n                        </Button>\n                      )}\n                    </Box>\n                  ))}\n                </Grid>\n              )}\n              <Grid item xs={12}>\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">Admin Response</Typography>\n                <Paper variant=\"outlined\" sx={{ p: 2, mt: 1 }}>\n                  <Typography variant=\"body1\">\n                    {selectedRequest.adminResponse || 'No admin response yet'}\n                  </Typography>\n                </Paper>\n              </Grid>\n            </Grid>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDetailsDialogOpen(false)}>Close</Button>\n          <Button\n            color=\"success\"\n            variant=\"contained\"\n            onClick={() => {\n              setDetailsDialogOpen(false);\n              handleRequestAction(selectedRequest, 'approved');\n            }}\n            sx={{\n              ml: 1,\n              backgroundColor: selectedRequest?.status === 'approved' ? 'success.dark' : 'success.main',\n              '&:hover': {\n                backgroundColor: 'success.dark'\n              }\n            }}\n          >\n            {selectedRequest?.status === 'approved' ? 'Approved' : 'Approve'}\n          </Button>\n          <Button\n            color=\"error\"\n            variant=\"contained\"\n            onClick={() => {\n              setDetailsDialogOpen(false);\n              handleRequestAction(selectedRequest, 'rejected');\n            }}\n            sx={{\n              ml: 1,\n              backgroundColor: selectedRequest?.status === 'rejected' ? 'error.dark' : 'error.main',\n              '&:hover': {\n                backgroundColor: 'error.dark'\n              }\n            }}\n          >\n            {selectedRequest?.status === 'rejected' ? 'Rejected' : 'Reject'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}